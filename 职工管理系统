//
// Created by 张欣潮，张康，邱志桐 on 2023-12-25.
//

#include"function.h"
int n = 0,size=0;
char form[11][20] = { "职工号","姓名","性别","出生年月","政治面貌","学历","职务","参加工作时间","部门","住址","电话" };
char xu[8][20] = { {"小学"},{"初中"},{"高中"},{"专科"},{"本科"},{"硕士"},{"博士"} };
char arr[N][20] = { {"中共党员"},{"中共预备党员"},{"共青团员"}, {"民革党员"}, {"民盟盟员"}, {"民建会员"}, {"民进会员"}, {"农工党党员"}, {"致公党党员"}, {"九三学社社员"}, {"台盟盟员"}, {"无党派人士"}, {"群众"} };
int tiaojian[1000] = { 0 };
char bumen[N][100];
int bumen_num[N] = { 0 };
struct employee huishouzhan[N];
void init() {
    FILE* pf = fopen("Hui_Shouzhan.data", "r+");
    if (!pf) {
        printf("文件打开失败\n");
    }
    else {
        size = 0;
        while (fscanf(pf, "%s%s%s%s%s%s%s%s%s%s%s", huishouzhan[size].id, huishouzhan[size].name, huishouzhan[size].gender, huishouzhan[size].birthday, huishouzhan[size].zhengzhimianmao, huishouzhan[size].xueli, huishouzhan[size].job, huishouzhan[size].time, huishouzhan[size].bumen, huishouzhan[size].address, huishouzhan[size].number) != EOF) {
            size++;
        }
        fclose(pf);
        pf = NULL;

    }
}
void read(){
    FILE* pf =fopen ("information.txt", "r+");
    if (!pf) {
        printf("文件打开失败\n");
    }
    else {
        n = 0;
        while (fscanf(pf, "%s%s%s%s%s%s%s%s%s%s%s", worker[n].id, worker[n].name, worker[n].gender, worker[n].birthday, &worker[n].zhengzhimianmao, worker[n].xueli, worker[n].job, worker[n].time, worker[n].bumen, worker[n].address, worker[n].number) != EOF) {
            n++;
        }  
        fclose(pf);
        pf = NULL;
        display();
        system("pause");
    }
}
void add() {
    printf("请按如下顺序输入信息,输入0退出添加\n");
    printf("职工号 姓名 性别 出生年月 政治面貌 学历 职务 参加工作时间 部门 住址 电话\n");
    printf("注意：政治面貌请从下列信息中选择填写\n");
    printf("0. 中共党员 1.中共预备党员 2.共青团员 3. 民革党员 4. 民盟盟员 5. 民建会员 6. 民进会员 7. 农工党党员 8. 致公党党员 9. 九三学社社员 10. 台盟盟员 11. 无党派人士 12. 群众 \n");
    do {
        char arr[11][600] = { 0 };
        for (int i = 0; i < 11; i++) {
            scanf("%s", arr[i]);
            if (arr[i][0] == '0' && arr[i][1] == 0)return;
        }
        int l = strlen(arr[1]), l1 = strlen(arr[0]), i = 0, l2 = strlen(arr[2]), l4 = strlen(arr[4]), l5 = strlen(arr[5]), l6 = strlen(arr[6]), l8 = strlen(arr[8]), l10 = strlen(arr[10]);
        for (i = 0; i < l1; i++) {
            if (arr[0][i] < 48 || arr[0][i] > 57)break;
        }
        if (i == l1) {
            strcpy(worker[n].id, arr[0]);
        }
        else {
        _0:     printf("职工号输入有误\n请重新输入\n");
            scanf("%s", worker[n].id);
            int ll = strlen(worker[n].id), i = 0;
            for (i = 0; i < ll; i++) {
                if (worker[n].id[i] < 48 || worker[n].id[i] > 57)break;
            }
            if (i != ll) {
                goto _0;
            }
        }
        for (i = 0; i < l; i++) {
            if (arr[1][i] >= 0)break;
        }
        if (i == l) {
            strcpy(worker[n].name, arr[1]);
        }
        else {
        _1:     printf("姓名输入有误\n请重新输入\n");
            scanf("%s", worker[n].name);
            int ll = strlen(worker[n].name), i = 0;
            for (i = 0; i < ll; i++) {
                if (worker[n].name[i] >= 0)break;
            }
            if (i != ll) {
                goto _1;
            }
        }
        for (i = 0; i < l2; i++) {
            if (arr[2][i] >= 0)break;
        }
        if (i == l2) {
            strcpy(worker[n].gender, arr[2]);
        }
        else {
        _2:     printf("性别输入有误\n请重新输入\n");
            scanf("%s", worker[n].gender);
            int ll = strlen(worker[n].gender), i = 0;
            for (i = 0; i < ll; i++) {
                if (worker[n].gender[i] >= 0)break;
            }
            if (i != ll) {
                goto _2;
            }
        }
        strcpy(worker[n].birthday, arr[3]);
        for (i = 0; i < l4; i++) {
            if (arr[4][i] >= 0)break;
        }
        if (i == l4) {
            strcpy(worker[n].zhengzhimianmao, arr[4]);
        }
        else {
        _4:     printf("政治面貌输入有误\n请重新输入\n");
            scanf("%s", worker[n].zhengzhimianmao);
            int ll = strlen(worker[n].zhengzhimianmao), i = 0;
            for (i = 0; i < ll; i++) {
                if (worker[n].zhengzhimianmao[i] >= 0)break;
            }
            if (i != ll) {
                goto _4;
            }
        }
        for (i = 0; i < l5; i++) {
            if (arr[5][i] >= 0)break;
        }
        if (i == l5) {
            strcpy(worker[n].xueli, arr[5]);
        }
        else {
        _5:     printf("学历输入有误\n请重新输入\n");
            scanf("%s", worker[n].xueli);
            int ll = strlen(worker[n].xueli), i = 0;
            for (i = 0; i < ll; i++) {
                if (worker[n].xueli[i] >= 0)break;
            }
            if (i != ll) {
                goto _5;
            }
        }
        for (i = 0; i < l6; i++) {
            if (arr[6][i] >= 0)break;
        }
        if (i == l6) {
            strcpy(worker[n].job, arr[6]);
        }
        else {
        _6:     printf("职位输入有误\n请重新输入\n");
            scanf("%s", worker[n].job);
            int ll = strlen(worker[n].job), i = 0;
            for (i = 0; i < ll; i++) {
                if (worker[n].job[i] >= 0)break;
            }
            if (i != ll) {
                goto _6;
            }
        }
        strcpy(worker[n].time, arr[7]);
        for (i = 0; i < l8; i++) {
            if (arr[8][i] >= 0)break;
        }
        if (i == l8) {
            strcpy(worker[n].bumen, arr[8]);
        }
        else {
        _8:     printf("部门输入有误\n请重新输入\n");
            scanf("%s", worker[n].bumen);
            int ll = strlen(worker[n].bumen), i = 0;
            for (i = 0; i < ll; i++) {
                if (worker[n].bumen[i] >= 0)break;
            }
            if (i != ll) {
                goto _8;
            }
        }
        strcpy(worker[n].address, arr[9]);
        for (i = 0; i < l10; i++) {
            if (arr[10][i] < 48 || arr[10][i] >57)break;
        }
        if (i == l10) {
            strcpy(worker[n].number, arr[10]);
        }
        else {
        _10:     printf("电话输入有误\n请重新输入\n");
            scanf("%s", worker[n].number);
            int ll = strlen(worker[n].number), i = 0;
            for (i = 0; i < ll; i++) {
                if (worker[n].number[i] < 48 || worker[n].number[i] > 57)break;
            }
            if (i != ll) {
                goto _10;
            }
        }
        n++;
        printf("添加成功!!!!!!!!!!!!!!!!!!!\n");   
        display();
        printf("按0退出 否则继续添加\n");
    }while (1);
}
void delete() {
    char namet[20];
    int flag,flagg=0;
    do {
        flag = 0;
_q:        printf("请输入要删除的员工姓名,按0取消删除,按1可从回收站恢复文件，按2可清空回收站\n");
        scanf("%s", namet);
        if (namet[0] == '0'&& namet[1] == 0)return;
        else if (namet[0] == '1' && namet[1] == 0) {
            if (size) {
                _p:                printf("要恢复所有还是部分?\n");
                printf("1.所有 2.部分 0.返回\n");
                printf("%-15s %-10s %-5s %-10s %-10s %-5s %-10s %-10s %-15s %-30s %-12s\n", "职工号", "姓名", "性别", "出生年月", "政治面貌", "学历", "职务", "参加工作时间", "部门", "住址", "电话");
                for (int i = 0; i < size; i++) {
                    printf("%-15s %-10s %-5s %-10s %-10s %-5s %-10s %-10s %-15s %-30s %-12s\n", huishouzhan[i].id, huishouzhan[i].name, huishouzhan[i].gender, huishouzhan[i].birthday, huishouzhan[i].zhengzhimianmao, huishouzhan[i].xueli, huishouzhan[i].job, huishouzhan[i].time, huishouzhan[i].bumen, huishouzhan[i].address, huishouzhan[i].number);
                }
                int i;
                scanf("%d", &i);
                if (i == 1) {
                    for (int i = 0; i < size; i++) { memcpy(worker + n, &huishouzhan[i], sizeof(huishouzhan[i])); n++; }
                    memset(huishouzhan, 0, sizeof(huishouzhan));
                    size = 0;
                    printf("已恢复\n");
                    display();
                }
                else if (i == 2) {
                    printf("请输入要恢复的员工姓名 0.返回\n");
                    char namee[15];
                    scanf("%s", namee);
                    if (namee[0] == '0' && namee[1] == 0)goto _p;
                    int flaggg = 0;
                    for (int i = 0; i < size; i++) {
                        if (!strcmp(huishouzhan[i].name, namee)) {
                            memcpy(&worker[n], &huishouzhan[i], sizeof(huishouzhan[i]));
                            flaggg = 1;
                            memset(&huishouzhan[i], 0, sizeof(huishouzhan[i]));
                        }
                    }
                    if (flaggg) {
                        printf("已恢复\n");
                        size--;
                        n++;
                        display();
                    }
                    else {
                        printf("未找到\n");
                    }
                }
                else goto _q;
            }
            else {
                printf("回收站为空\n");
            }
        }
        else if (namet[0] == '2' && namet[1] == 0) {
            if (size) {
                memset(huishouzhan, 0, sizeof(huishouzhan));
                size = 0;
                printf("已清空\n");
            }
            else {
                printf("回收站为空\n");
            }
        }
        else {
            printf("确认吗？？？？？？？？？？？\n");
_qq:        printf("y    /  n         \n");
            char a;
            scanf("\n%c", &a);
            if (a == 'n') {
                goto _q;
            }
            else if (a == 'y') {
                for (int i = 0; i < n; i++) {
                    if (!strcmp(worker[i].name, namet)) {
                        int t = i;
                        memcpy(huishouzhan+size, &worker[i], sizeof(worker[i]));
                        size++;
                        flag = 1;
                        for (int j = t; j < n; j++)    worker[j] = worker[j + 1];
                    }
                }
                n--;
                if (!flag) {
                    printf("未找到此人 请重新输入\n");
                }
                else {
                    printf("已删除！\n");
                    display();
                }
            }
            else {
                printf("输入错误\n");
                goto _qq;
            }
        }
    } while (!flagg);
    system("pause");
}
void modify() {
    int m = 0, flag = 0,flagg=0;
    char namet[20];
    do {
 _q:    printf("1.输入要修改的员工姓名,输入0可取消修改\n");
        scanf("%s", namet);
        if (namet[0] == '0'&&namet[1] == 0)    return;
        else {
            for (int i = 0; i < n; i++) {
                if (!strcmp(worker[i].name, namet)) { m = i; flag = 1; }
            }
            if (!flag)printf("未找到此人 请重新输入\n");
            else {
                printf("修改部分还是全部修改？按2返回\n");
                printf("修改部分请输入0，修改全部请输入1\n");
                int input;
                scanf("%d", &input);
                if (input == 1) {
                    printf("注意：政治面貌请选择以下给出的   取消修改请按  q(小写)  \n");
                    printf("0. 中共党员 1.中共预备党员 2.共青团员 3. 民革党员 4. 民盟盟员 5. 民建会员 6. 民进会员 7. 农工党党员 8. 致公党党员 9. 九三学社社员 10. 台盟盟员 11. 无党派人士 12. 群众 \n");
                    char arr[11][600] = { 0 };
                    for (int i = 0; i < 11; i++) {
                        scanf("%s", arr[i]);
                        if (arr[i][0] == '0' && arr[i][1] == 0)return;
                    }
                    int l = strlen(arr[1]), l1 = strlen(arr[0]), i = 0, l2 = strlen(arr[2]), l4 = strlen(arr[4]), l5 = strlen(arr[5]), l6 = strlen(arr[6]), l8 = strlen(arr[8]), l10 = strlen(arr[10]);
                    for (i = 0; i < l1; i++) {
                        if (arr[0][i] < 48 || arr[0][i] > 57)break;
                    }
                    if (i == l1) {
                        strcpy(worker[m].id, arr[0]);
                    }
                    else {
                    _0:     printf("职工号输入有误\n请重新输入\n");
                        scanf("%s", worker[m].id);
                        int ll = strlen(worker[m].id), i = 0;
                        for (i = 0; i < ll; i++) {
                            if (worker[m].id[i] < 48 || worker[m].id[i] > 57)break;
                        }
                        if (i != ll) {
                            goto _0;
                        }
                    }
                    for (i = 0; i < l; i++) {
                        if (arr[1][i] >= 0)break;
                    }
                    if (i == l) {
                        strcpy(worker[m].name, arr[1]);
                    }
                    else {
                    _1:     printf("姓名输入有误\n请重新输入\n");
                        scanf("%s", worker[m].name);
                        int ll = strlen(worker[m].name), i = 0;
                        for (i = 0; i < ll; i++) {
                            if (worker[m].name[i] >= 0)break;
                        }
                        if (i != ll) {
                            goto _1;
                        }
                    }
                    for (i = 0; i < l2; i++) {
                        if (arr[2][i] >= 0)break;
                    }
                    if (i == l2) {
                        strcpy(worker[m].gender, arr[2]);
                    }
                    else {
                    _2:     printf("性别输入有误\n请重新输入\n");
                        scanf("%s", worker[m].gender);
                        int ll = strlen(worker[m].gender), i = 0;
                        for (i = 0; i < ll; i++) {
                            if (worker[m].gender[i] >= 0)break;
                        }
                        if (i != ll) {
                            goto _2;
                        }
                    }
                    strcpy(worker[m].birthday, arr[3]);
                    for (i = 0; i < l4; i++) {
                        if (arr[4][i] >= 0)break;
                    }
                    if (i == l4) {
                        strcpy(worker[m].zhengzhimianmao, arr[4]);
                    }
                    else {
                    _4:     printf("政治面貌输入有误\n请重新输入\n");
                        scanf("%s", worker[m].zhengzhimianmao);
                        int ll = strlen(worker[m].zhengzhimianmao), i = 0;
                        for (i = 0; i < ll; i++) {
                            if (worker[m].zhengzhimianmao[i] >= 0)break;
                        }
                        if (i != ll) {
                            goto _4;
                        }
                    }
                    for (i = 0; i < l5; i++) {
                        if (arr[5][i] >= 0)break;
                    }
                    if (i == l5) {
                        strcpy(worker[m].xueli, arr[5]);
                    }
                    else {
                    _5:     printf("学历输入有误\n请重新输入\n");
                        scanf("%s", worker[m].xueli);
                        int ll = strlen(worker[m].xueli), i = 0;
                        for (i = 0; i < ll; i++) {
                            if (worker[m].xueli[i] >= 0)break;
                        }
                        if (i != ll) {
                            goto _5;
                        }
                    }
                    for (i = 0; i < l6; i++) {
                        if (arr[6][i] >= 0)break;
                    }
                    if (i == l6) {
                        strcpy(worker[m].job, arr[6]);
                    }
                    else {
                    _6:     printf("职位输入有误\n请重新输入\n");
                        scanf("%s", worker[m].job);
                        int ll = strlen(worker[m].job), i = 0;
                        for (i = 0; i < ll; i++) {
                            if (worker[m].job[i] >= 0)break;
                        }
                        if (i != ll) {
                            goto _6;
                        }
                    }
                    strcpy(worker[m].time, arr[7]);
                    for (i = 0; i < l8; i++) {
                        if (arr[8][i] >= 0)break;
                    }
                    if (i == l8) {
                        strcpy(worker[m].bumen, arr[8]);
                    }
                    else {
                    _8:     printf("部门输入有误\n请重新输入\n");
                        scanf("%s", worker[m].bumen);
                        int ll = strlen(worker[m].bumen), i = 0;
                        for (i = 0; i < ll; i++) {
                            if (worker[m].bumen[i] >= 0)break;
                        }
                        if (i != ll) {
                            goto _8;
                        }
                    }
                    strcpy(worker[m].address, arr[9]);
                    for (i = 0; i < l10; i++) {
                        if (arr[10][i] < 48 || arr[10][i] > 57)break;
                    }
                    if (i == l10) {
                        strcpy(worker[m].number, arr[10]);
                    }
                    else {
                    _10:     printf("电话输入有误\n请重新输入\n");
                        scanf("%s", worker[m].number);
                        int ll = strlen(worker[m].number), i = 0;
                        for (i = 0; i < ll; i++) {
                            if (worker[m].number[i] < 48 || worker[m].number[i] > 57)break;
                        }
                        if (i != ll) {
                            goto _10;
                        }
                    }
                }
                else if (input == 0) {
                    char infomation[20], instead[300];
                    printf("要修改什么信息 按q退出\n");
                    scanf("%s", infomation);
                    if (infomation[0] == 'q' && infomation[1] == 0)return;
                    printf("要修改成什么? 按q退出\n");
                    printf("注意：政治面貌请选择以下给出的  取消修改请按  q(小写)  \n");
                    printf("0. 中共党员 1.中共预备党员 2.共青团员 3. 民革党员 4. 民盟盟员 5. 民建会员 6. 民进会员 7. 农工党党员 8. 致公党党员 9. 九三学社社员 10. 台盟盟员 11. 无党派人士 12. 群众 \n");
                    scanf("%s", instead);
                    if (instead[0] == 'q' && instead[1] == 0)return;
                    for (int i = 0; i < 11; i++) {
                        if (!strcmp(infomation, form[i])) {
                            switch (i) {
                            case 0: {
                                int l1 = strlen(instead);
                                for (i = 0; i < l1; i++) {
                                    if (instead[i] < 48 ||  instead[i] > 57)break;
                                }
                                if (i == l1) {
                                    strcpy(worker[m].id, instead);
                                }
                                else {
                                _100:     printf("职工号输入有误\n请重新输入\n");
                                    scanf("%s", worker[m].id);
                                    int ll = strlen(worker[m].id), i = 0;
                                    for (i = 0; i < ll; i++) {
                                        if (worker[m].id[i] < 48 || worker[m].id[i] > 57)break;
                                    }
                                    if (i != ll) {
                                        goto _100;
                                    }
                                }
                                break; 
                            }
                            case 1: {
                                int l = strlen(instead);
                                for (i = 0; i < l; i++) {
                                if (instead[i] >= 0)break;
                            }
                                  if (i == l) {
                                      strcpy(worker[m].name, instead);
                                  }
                                  else {
                                  _11:     printf("姓名输入有误\n请重新输入\n");
                                      scanf("%s", worker[m].name);
                                      int ll = strlen(worker[m].name), i = 0;
                                      for (i = 0; i < ll; i++) {
                                          if (worker[m].name[i] >= 0)break;
                                      }
                                      if (i != ll) {
                                          goto _11;
                                      }
                                  } 
                                  break; 
                            }
                            case 2: {
                                int l2 = strlen(instead);
                                for (i = 0; i < l2; i++) {
                                    if (instead[i] >= 0)break;
                                }
                                if (i == l2) {
                                    strcpy(worker[m].gender, instead);
                                }
                                else {
                                _12:     printf("性别输入有误\n请重新输入\n");
                                    scanf("%s", worker[m].gender);
                                    int ll = strlen(worker[m].gender), i = 0;
                                    for (i = 0; i < ll; i++) {
                                        if (worker[m].gender[i] >= 0)break;
                                    }
                                    if (i != ll) {
                                        goto _12;
                                    }
                                }
                                break; 
                            }
                            case 3: {strcpy(worker[m].birthday, instead); break; }
                            case 4: {
                                int l4 = strlen(instead);
                                for (i = 0; i < l4; i++) {
                                if (instead[i] >= 0)break;
                            }
                                  if (i == l4) {
                                      strcpy(worker[m].zhengzhimianmao, instead);
                                  }
                                  else {
                                  _14:     printf("政治面貌输入有误\n请重新输入\n");
                                      scanf("%s", worker[m].zhengzhimianmao);
                                      int ll = strlen(worker[m].zhengzhimianmao), i = 0;
                                      for (i = 0; i < ll; i++) {
                                          if (worker[m].zhengzhimianmao[i] >= 0)break;
                                      }
                                      if (i != ll) {
                                          goto _14;
                                      }
                                  }
                                  break; 
                            }
                            case 5: {
                                int l5 = strlen(instead);
                                for (i = 0; i < l5; i++) {
                                    if (instead[i] >= 0)break;
                                }
                                if (i == l5) {
                                    strcpy(worker[m].xueli, instead);
                                }
                                else {
                                _15:     printf("学历输入有误\n请重新输入\n");
                                    scanf("%s", worker[m].xueli);
                                    int ll = strlen(worker[m].xueli), i = 0;
                                    for (i = 0; i < ll; i++) {
                                        if (worker[m].xueli[i] >= 0)break;
                                    }
                                    if (i != ll) {
                                        goto _15;
                                    }
                                }
                                break;
                            }
                            case 6: {
                                int l6 = strlen(instead);
                                for (i = 0; i < l6; i++) {
                                    if (instead[i] >= 0)break;
                                }
                                if (i == l6) {
                                    strcpy(worker[m].job, instead);
                                }
                                else {
                                _16:     printf("职位输入有误\n请重新输入\n");
                                    scanf("%s", worker[m].job);
                                    int ll = strlen(worker[m].job), i = 0;
                                    for (i = 0; i < ll; i++) {
                                        if (worker[m].job[i] >= 0)break;
                                    }
                                    if (i != ll) {
                                        goto _16;
                                    }
                                }
                                break;
                            }
                            case 7: {strcpy(worker[m].time, instead); break; }
                            case 8: {
                                int l8 = strlen(instead);
                                for (i = 0; i < l8; i++) {
                                    if (instead[i] >= 0)break;
                                }
                                if (i == l8) {
                                    strcpy(worker[m].bumen, instead);
                                }
                                else {
                                _18:     printf("部门输入有误\n请重新输入\n");
                                    scanf("%s", worker[m].bumen);
                                    int ll = strlen(worker[m].bumen), i = 0;
                                    for (i = 0; i < ll; i++) {
                                        if (worker[m].bumen[i] >= 0)break;
                                    }
                                    if (i != ll) {
                                        goto _18;
                                    }
                                }
                                break; 
                            }
                            case 9: {strcpy(worker[m].address, instead); }
                            case 10: {
                                int l10 = strlen(instead);
                                for (i = 0; i < l10; i++) {
                                    if (instead[i] < 48 || instead[i] > 57)break;
                                }
                                if (i == l10) {
                                    strcpy(worker[m].number, instead);
                                }
                                else {
                                _110:     printf("电话输入有误\n请重新输入\n");
                                    scanf("%s", worker[m].number);
                                    int ll = strlen(worker[m].number), i = 0;
                                    for (i = 0; i < ll; i++) {
                                        if (worker[m].number[i] < 48 || worker[m].number[i] > 57)break;
                                    }
                                    if (i != ll) {
                                        goto _110;
                                    }
                                }
                                break; 
                            }
                            }
                        }
                    }
                }
                else goto _q;
                printf("已修改\n");
                display();
            }
        }
        } while (!flagg);
        system("pause");
}
void display() {
    if (!n)printf("无数据\n");
    else {
        printf("%-15s %-10s %-5s %-10s %-10s %-5s %-10s %-10s %-15s %-30s %-12s\n", "职工号", "姓名", "性别", "出生年月", "政治面貌", "学历", "职务", "参加工作时间", "部门", "住址", "电话");
        for (int i = 0; i < n; i++) {
            printf("%-15s %-10s %-5s %-10s %-10s %-5s %-10s %-10s %-15s %-30s %-12s\n", worker[i].id, worker[i].name, worker[i].gender, worker[i].birthday, worker[i].zhengzhimianmao, worker[i].xueli, worker[i].job, worker[i].time, worker[i].bumen, worker[i].address, worker[i].number);
        }
    }
}
void display1() {
    if (!n)printf("无数据\n");
    else {
        printf("%-15s %-10s %-5s %-10s %-10s %-5s %-10s %-10s %-15s %-30s %-12s\n", "职工号", "姓名", "性别", "出生年月", "政治面貌", "学历", "职务", "参加工作时间", "部门", "住址", "电话");
        for (int i = 0; i < n; i++) {
            printf("%-15s %-10s %-5s %-10s %-10s %-5s %-10s %-10s %-15s %-30s %-12s\n", worker[i].id, worker[i].name, worker[i].gender, worker[i].birthday, worker[i].zhengzhimianmao, worker[i].xueli, worker[i].job, worker[i].time, worker[i].bumen, worker[i].address, worker[i].number);
        }
    }
    system("pause");
}
int comp1(const void* a, const void* b)
{
    struct employee* pa = (struct employee*)a;
    struct employee* pb = (struct employee*)b;
    char a1[20], b1[20];
    strcpy(a1, pa->id);
    strcpy(b1, pb->id);
    return strcmp(a1, b1);
}                     //从小到大
int comp2(const void* a, const void* b)
{
    struct employee* pa = (struct employee*)a;
    struct employee* pb = (struct employee*)b;
    char a1[20], b1[20];
    strcpy(a1, pa->id);
    strcpy(b1, pb->id);
    return strcmp(b1, a1);
}                     //从大到小
int comp3(const void* a, const void* b)
{
    struct employee* pa = (struct employee*)a;
    struct employee* pb = (struct employee*)b;
    char a1[20], b1[20];
    strcpy(a1, pa->birthday);
    strcpy(b1, pb->birthday);
    return strcmp(a1, b1);
}                     //从小到大
int comp4(const void* a, const void* b)
{
    struct employee* pa = (struct employee*)a;
    struct employee* pb = (struct employee*)b;
    char a1[20], b1[20];
    strcpy(a1, pa->birthday);
    strcpy(b1, pb->birthday);
    return strcmp(b1, a1);
}                     //从大到小
int comp5(const void* a, const void* b)
{
    struct employee* pa = (struct employee*)a;
    struct employee* pb = (struct employee*)b;
    char a1[20], b1[20];
    int ia = 0, ib = 0;
    strcpy(a1, pa->xueli);
    strcpy(b1, pb->xueli);

    for (int i = 0; i < 7; i++) {
        if (strcmp(xu[i], a1) == 0)
            ia = i;
        if (strcmp(xu[i], b1) == 0)
            ib = i;
    }
    return ia - ib;
}                     //从小到大
int comp6(const void* a, const void* b)
{
    struct employee* pa = (struct employee*)a;
    struct employee* pb = (struct employee*)b;
    char a1[20], b1[20];
    int ia = 0, ib = 0;
    strcpy(a1, pa->xueli);
    strcpy(b1, pb->xueli);
    for (int i = 0; i < 7; i++) {
        if (strcmp(xu[i], a1) == 0)
            ia = i;
        if (strcmp(xu[i], b1) == 0)
            ib = i;
    }
    return ib - ia;
}                     //从大到小
void find() {
    int flag = 0;
    do {
        printf("请输入查询条件（单条件或组合条件）\n");
        printf("请输入\n职工号\n姓名\n性别\n出生年月\n政治面貌\n学历\n职务\n参加工作时间\n部门\n地址\n电话号码\n");
        printf("按回车结束 按0退出查询\n");
        char yuan[11][101];
        char ch;
        int num = 0, flag = 0;
        for (int i = 0; i < 11; i++) {
            scanf("%s", yuan[i]);
            if (yuan[i][0] == '0' && yuan[i][1] == 0)return;
            if ((ch = getchar()) == '\n')
            {
                num = i + 1;
                break;
            }
        }
        int j;
        for (int i = 0; i < num; i++) {
            for (j = 0; j < n; j++) {
                if (strcmp(yuan[i], worker[j].id) == 0) {
                    tiaojian[j]++;
                }
                else if (strcmp(yuan[i], worker[j].name) == 0) {
                    tiaojian[j]++;
                }
                else if (strcmp(yuan[i], worker[j].gender) == 0) {
                    tiaojian[j]++;
                }
                else if (strcmp(yuan[i], worker[j].birthday) == 0) {
                    tiaojian[j]++;
                }
                else if (strcmp(yuan[i], worker[j].zhengzhimianmao) == 0) {
                    tiaojian[j]++;
                }
                else if (strcmp(yuan[i], worker[j].xueli) == 0) {
                    tiaojian[j]++;
                }
                else if (strcmp(yuan[i], worker[j].job) == 0) {
                    tiaojian[j]++;
                }
                else if (strcmp(yuan[i], worker[j].time) == 0) {
                    tiaojian[j]++;
                }
                else if (strcmp(yuan[i], worker[j].bumen) == 0) {
                    tiaojian[j]++;
                }
                else if (strcmp(yuan[i], worker[j].address) == 0) {
                    tiaojian[j]++;
                }
                else if (strcmp(yuan[i], worker[j].number) == 0) {
                    tiaojian[j]++;
                }
            }
        }
        int a = 114514;
        for (int j = 0; j < n; j++)
        {
            if (tiaojian[j] == num)
            {
                flag = 1;
                if (a == 114514) {
                    printf("%-15s %-10s %-5s %-10s %-10s %-5s %-10s %-10s %-15s %-30s %-12s\n", "职工号", "姓名", "性别", "出生年月", "政治面貌", "学历", "职务", "参加工作时间", "部门", "住址", "电话");
                    a--;
                }
                printf("%-15s %-10s %-5s %-10s %-10s %-5s %-10s %-10s %-15s %-30s %-12s\n", worker[j].id, worker[j].name, worker[j].gender, worker[j].birthday, worker[j].zhengzhimianmao, worker[j].xueli, worker[j].job, worker[j].time, worker[j].bumen, worker[j].address, worker[j].number);
            }
        }
        if (!flag)printf("未找到\n");
        memset(tiaojian, 0, sizeof(tiaojian));
    } while (!flag);
    system("pause");
}
void sort()
{
    int ab;
 _q:   printf("选择信息进行排序：职工号按1，出生年月按2，学历按3,取消按0\n");
    scanf("%d", &ab);
    if (!ab)return;
    if (ab == 1)
    {
        printf("请选择正序还是倒序：正序按1，倒序按2 返回按0\n");
        int ac;
        scanf("%d", &ac);
        if (!ac) goto _q;
        if (ac == 1)
        {
            qsort(worker, n, sizeof(struct employee), comp1);
            display();
        }
        else if (ac == 2)
        {
            qsort(worker, n, sizeof(struct employee), comp2);
            display();
        }


    }
    else if (ab == 2)
    {
        printf("请选择正序还是倒序：正序按1，倒序按2 返回按0\n");
        int ac;
        scanf("%d", &ac);
        if (!ac) goto _q;
        if (ac == 1)
        {
            qsort(worker, n, sizeof(struct employee), comp3);
            display();

        }
        else if (ac == 2)
        {
            qsort(worker, n, sizeof(struct employee), comp4);
            display();
        }
    }
    else if (ab == 3)
    {
        printf("请选择正序还是倒序：正序按1，倒序按2 返回按0\n");
        int ac;
        scanf("%d", &ac);
        if (!ac) goto _q;
        if (ac == 1)
        {
            qsort(worker, n, sizeof(struct employee), comp5);
            display();

        }
        else if (ac == 2)
        {
            qsort(worker, n, sizeof(struct employee), comp6);
            display();
        }

    }
    system("pause");
}
void statictic()
{
    if (!n) {
        printf("无数据\n");
        system("pause");
        return;
    }
    int num_nan = 0, num_nv = 0;//性别
    for (int i = 0; i < n; i++)
    {
        if (strcmp(worker[i].gender, "男") == 0)
            num_nan++;
        else
            num_nv++;
    }
    printf("男生占比：%.1f%%\n女生占比：%.1f%%\n\n", 100.0 * num_nan / n, 100.0 * num_nv / n);

    int people_num[13] = { 0 };//政治面貌
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < 13; j++) {
            if (strcmp(worker[i].zhengzhimianmao, arr[j]) == 0)
            {
                people_num[j]++;
                break;
            }
        }
    }
    printf("%-15s%-10s%3s\n", "政治面貌", "人数", "比例");
    for (int i = 0; i < 13; i++) {
        if (people_num[i] == 0)
            continue;
        else
        {
            printf("%-15s%-10d%3.1f%%\n", arr[i], people_num[i], 100.0 * people_num[i] / n);
        }
    }
    //学历
    printf("\n");
    int xue_num[8] = { 0 };
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < 7; j++) {
            if (strcmp(xu[j], worker[i].xueli) == 0)
            {
                xue_num[j]++;
                break;
            }
        }
    }
    printf("%-15s%-10s%3s\n", "学历", "人数", "比例");
    for (int i = 0; i < 8; i++) {
        if (xue_num[i] == 0)
            continue;
        else
        {
            printf("%-15s%-10d%3.1f%%\n", xu[i], xue_num[i], xue_num[i] * 100.0 / n);
        }
    }
    printf("\n");
    //部门

    strcpy(bumen[0], worker[0].bumen);
    int k = 1;
    int flag = 0;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < k; j++) {
            if (strcmp(bumen[j], worker[i].bumen) != 0)
            {
                flag++;
            }
        }
        if (flag == k)
        {
            strcpy(bumen[k], worker[i].bumen);
            k++;
            flag = 0;
        }
    }
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < k; j++) {
            if (strcmp(bumen[j], worker[i].bumen) == 0)
            {
                bumen_num[j]++;
            }
        }
    }
    printf("%-15s%-10s%3s\n", "部门", "人数", "比例");
    for (int j = 0; j < k; j++) {
        printf("%-15s%-10d%3.1f%%\n", bumen[j], bumen_num[j], bumen_num[j] * 100.0 / n);
    }

    system("pause");
}
void save() {
    FILE* fp;
    if ((fp = fopen("information.txt", "w+")) == NULL)   printf("cannot open file");
    for (int i = 0; i < n; i++)
    {
        fprintf(fp, "%s %s %s %s %s %s %s %s %s %s %s \n", worker[i].id, worker[i].name, worker[i].gender, worker[i].birthday, &worker[i].zhengzhimianmao, worker[i].xueli, worker[i].job, worker[i].time, worker[i].bumen, worker[i].address, worker[i].number);
    }
    printf("已保存！！！！\n");
    fclose(fp);
    fp = NULL;
    system("pause");
}

void huishouzhan_save() {
    FILE* pf = fopen("Hui_Shouzhan.data", "w+");
    if (!pf)printf("文件打开失败\n");
    else {
        for (int i = 0; i < size; i++)
        {
            fprintf(pf, "%s %s %s %s %s %s %s %s %s %s %s \n", huishouzhan[i].id, huishouzhan[i].name, huishouzhan[i].gender, huishouzhan[i].birthday, huishouzhan[i].zhengzhimianmao, huishouzhan[i].xueli, huishouzhan[i].job, huishouzhan[i].time, huishouzhan[i].bumen, huishouzhan[i].address, huishouzhan[i].number);
        }
    }
    fclose(pf);
    pf = NULL;
}
